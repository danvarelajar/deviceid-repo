input {
    file {
        path => "/var/log/bigip/bot/*.log"
        start_position => beginning
        type =>"botlogs"
    }
        file {
        path => "/var/log/bigip/http/*.log"
        type =>"httplogs"
    }
}

filter {
        if [type] == "botlogs" {
        grok {
               match => {"message" =>  ["%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:eventSourceIP}%{SPACE}%{GREEDYDATA:xdata}"] }
             }
                kv {
            source => "xdata"
            field_split => ","
            value_split => "="
                                }
        date {
        match => [ "timestamp" , "UNIX_MS"]
        target => "@timestamp"
             }
                            geoip {
                source => "client_ip"
                database => "/etc/logstash/GeoLite2-City.mmdb"
                }
    }
    if [type] == "httplogs" {
        grok {
                match => { "message" => "#%{NUMBER:timestamp}#%{DATA:uName}#%{DATA:virtual_name}#%{IP:clientip}#%{POSINT:client_port}#%{DATA:xff_ip}#%{DATA:lb_server}#%{DATA:http_host}#%{DATA:http_method}#%{DATA:http_request_uri}#%{NUMBER:status_code}#%{DATA:content_type}#%{NUMBER:content_length}#%{DATA:deviceA}#%{DATA:deviceB}#%{DATA:http_user_agent}#%{NUMBER:authcode}#"}
                }
        date {
        match => [ "timestamp" , "UNIX_MS"]
        target => "@timestamp"
                }
                geoip {
                source => "xff_ip"
                database => "/etc/logstash/GeoLite2-City.mmdb"
                }
    }
}

output {
    if [type] == "botlogs" {
                elasticsearch {index => "bot.logs-%{+YYYY.MM.dd}"}
                stdout {}
        }
    if [type] == "httplogs" {
                elasticsearch {index => "http.logs-%{+YYYY.MM.dd}"}
                stdout {}
        }
}